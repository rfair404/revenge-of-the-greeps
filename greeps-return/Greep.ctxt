#BlueJ class context
comment0.params=ship
comment0.target=Greep(Ship)
comment0.text=\n\ Create\ a\ greep.\n
comment1.params=
comment1.target=void\ act()
comment1.text=\n\ Greenfoot's\ standard\ act\ method,\ which\ can\ be\ reimplemented\ in\ subclasses.\n\ When\ reimplemented,\ the\ first\ line\ of\ the\ act()\ should\ always\ call\ super.act().\n
comment10.params=
comment10.target=boolean\ moveWasBlocked()
comment10.text=\n\ Return\ true\ if\ we\ have\ been\ blocked\ by\ an\ opponent\ greep.\n
comment11.params=
comment11.target=void\ loadTomato()
comment11.text=\n\ Load\ a\ tomato\ onto\ *another*\ greep.\ This\ works\ only\ if\ there\ is\ another\ greep\n\ and\ a\ tomato\ pile\ present,\ otherwise\ this\ method\ does\ nothing.\n
comment12.params=
comment12.target=boolean\ carryingTomato()
comment12.text=\n\ Check\ whether\ we\ are\ carrying\ a\ tomato.\n
comment13.params=
comment13.target=void\ dropTomato()
comment13.text=\n\ Drop\ the\ tomato\ we\ are\ carrying.\ If\ we\ are\ at\ the\ ship,\ it\ is\ counted.\n\ If\ not,\ it's\ just\ gone...\n
comment14.params=
comment14.target=TomatoPile\ getTomatoes()
comment14.text=\n\ If\ we\ can\ see\ tomatoes,\ this\ will\ return\ them.\ Otherwise\ it\ returnes\ null.\n\ <p>\n\ You\ are\ only\ allowed\ to\ call\ getX()\ and\ getY()\ on\ the\ returned\ tomato\ pile.\ \n
comment15.params=withTomatoes
comment15.target=int\ numberOfOpponents(boolean)
comment15.text=\n\ Return\ the\ number\ of\ nearby\ opponent\ greeps\ which\ are\ not\ currently\ knocked\ out\ by\ a\ stink\ bomb.\n\ \n\ @param\ withTomatoes\ If\ true,\ only\ count\ the\ greeps\ that\ are\ carrying\ a\ tomato.\n
comment16.params=withTomatoes
comment16.target=int\ numberOfFriends(boolean)
comment16.text=\n\ Return\ the\ number\ of\ nearby\ friendly\ greeps\ which\ are\ not\ currently\ knocked\ out\ by\ a\ stink\ bomb.\n\ \n\ @param\ withTomatoes\ If\ true,\ only\ count\ the\ greeps\ that\ are\ carrying\ a\ tomato.\n
comment17.params=
comment17.target=Greep\ getFriend()
comment17.text=\n\ Returns\ a\ friendly\ greep,\ if\ there\ is\ one\ at\ our\ current\ location.\n\ Returns\ null\ otherwise.\n\ <p>\n\ You\ are\ only\ allowed\ to\ access\ the\ memory\ and\ flags\ of\ the\ friend.\n
comment18.params=percent
comment18.target=boolean\ randomChance(int)
comment18.text=\n\ Return\ 'true'\ in\ exactly\ 'percent'\ number\ of\ calls.\ That\ is\:\ a\ call\n\ randomChance(25)\ has\ a\ 25%\ chance\ to\ return\ true.\n
comment19.params=slot\ val
comment19.target=void\ setMemory(int,\ int)
comment19.text=\n\ Store\ something\ in\ the\ greep's\ memory.\ There\ are\ four\ memory\ slots,\ numbered\n\ 0\ to\ 3,\ each\ can\ hold\ an\ int\ value.\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ This\ method\ specifies\ the\ name\ of\ the\ greeps\ (for\ display\ on\ the\ result\ board).\n\ Try\ to\ keep\ the\ name\ short\ so\ that\ it\ displays\ nicely\ on\ the\ result\ board.\n
comment20.params=slot
comment20.target=int\ getMemory(int)
comment20.text=\n\ Retrieve\ a\ previously\ stored\ value.\n\ \n\ Other\ friendly\ greeps\ are\ allowed\ to\ call\ this\ mehtod.\n
comment21.params=flagNo\ val
comment21.target=void\ setFlag(int,\ boolean)
comment21.text=\n\ Store\ a\ user\ defined\ boolean\ value\ (a\ "flag").\ Two\ flags\ are\ available,\ \n\ i.e.\ 'flagNo'\ may\ be\ 1\ or\ 2.\n
comment22.params=flagNo
comment22.target=boolean\ getFlag(int)
comment22.text=\n\ Retrieve\ the\ value\ of\ a\ flag.\ 'flagNo'\ can\ be\ 1\ or\ 2.\n\ \n\ Other\ friendly\ greeps\ are\ allowed\ to\ call\ this\ mehtod.\n
comment23.params=
comment23.target=boolean\ isBlocking()
comment23.text=\n\ Return\ true\ if\ this\ greep\ is\ in\ "blocking"\ mode\ -\ it\ has\ hunkered\ down\ to\n\ prevent\ opponent\ greeps\ from\ passing\ (while\ allowing\ friendly\ greeps\ through).\n
comment24.params=
comment24.target=void\ block()
comment24.text=\n\ Block\ opponent\ greeps\ from\ passing\ our\ current\ location.\ This\ is\ only\ effective\ if\n\ we\ haven't\ moved\ (can't\ move\ and\ block\ in\ the\ same\ turn).\n
comment25.params=
comment25.target=void\ kablam()
comment25.text=\n\ Release\ a\ stink\ bomb.\ All\ greeps\ within\ a\ small\ radius\ will\ be\ knocked\ out\ for\n\ a\ small\ period\ of\ time.\ If\ a\ greep\ carrying\ a\ tomato\ is\ knocked\ out,\ it\ will\ drop\n\ the\ tomato\ on\ the\ ground.\n
comment26.params=x\ y
comment26.target=boolean\ canMoveTo(int,\ int)
comment26.text=\n\ True\ if\ we\ can\ move\ to\ the\ given\ location\ without\ being\ blocked\ by\ water,\ the\ edge\n\ of\ the\ map\ or\ a\ blocking\ opponent.\n
comment27.params=x\ y
comment27.target=boolean\ blocks(int,\ int)
comment27.text=\n\ True\ if\ this\ greep\ is\ blocking\ the\ given\ position.\n
comment28.params=
comment28.target=void\ carryTomato()
comment28.text=\n\ Receive\ a\ tomato\ and\ carry\ it.\n
comment29.params=
comment29.target=void\ leaveTomato()
comment29.text=\n\ Leave\ the\ tomato\ we\ are\ carrying.\ \n\ It\ will\ put\ the\ tomato\ on\ the\ ground\ -\ forming\ a\ pile\ of\ one\ tomato.\n
comment3.params=angle
comment3.target=void\ turn(int)
comment3.text=\n\ Turn\ 'angle'\ degrees\ towards\ the\ right\ (clockwise).\n
comment30.params=
comment30.target=void\ keelOver()
comment30.text=\n\ Make\ this\ greep\ flip.\n
comment31.params=
comment31.target=java.lang.String\ getCurrentImage()
comment31.text=\n\ This\ method\ specifies\ the\ image\ we\ want\ displayed\ at\ any\ time.\n
comment32.params=
comment32.target=boolean\ isTeamTwo()
comment32.text=\n\ Return\ true\ if\ this\ is\ team\ 2,\ false\ if\ it\ is\ team\ 1.\n
comment33.params=x\ y
comment33.target=int\ getAngleTo(int,\ int)
comment33.text=\n\ Return\ the\ angle\ from\ the\ origin\ (0,0)\ to\ some\ point\ (x,y),\ in\ degrees\n
comment34.params=x\ y
comment34.target=int\ distanceTo(int,\ int)
comment34.text=\n\ Return\ the\ distance\ between\ this\ greep\ and\ an\ arbitrary\ point.\n
comment4.params=
comment4.target=void\ turnHome()
comment4.text=\n\ Turn\ in\ the\ direction\ facing\ the\ home\ ship.\n
comment5.params=x\ y
comment5.target=void\ turnTowards(int,\ int)
comment5.text=\n\ Turn\ to\ face\ an\ arbitrary\ point\ on\ the\ map.\n
comment6.params=
comment6.target=boolean\ atShip()
comment6.text=\n\ True\ if\ we\ are\ at\ our\ space\ ship.\n
comment7.params=
comment7.target=int[]\ getShipData()
comment7.text=\n\ Get\ the\ ship's\ data\ bank\ array\ (1000\ ints).\n\ This\ can\ only\ be\ done\ if\ the\ greep\ is\ at\ the\ ship.\n\ The\ data\ inside\ the\ array\ can\ be\ freely\ manipulated.\n
comment8.params=
comment8.target=void\ move()
comment8.text=\n\ Try\ and\ move\ forward\ in\ the\ current\ direction.\ If\ we\ are\ blocked\ (by\ water,\ or\ an\n\ opponent\ greep\ who\ is\ blocking),\ we\ won't\ move;\ atWater()/moveWasBlocked()\ can\ be\n\ used\ to\ check\ for\ this,\ and\ in\ that\ case,\ it\ is\ allowed\ to\ change\ direction\ and\ try\n\ move()ing\ again.\n
comment9.params=
comment9.target=boolean\ atWater()
comment9.text=\n\ Return\ true\ if\ we\ have\ just\ seen\ water\ in\ front\ of\ us.\ \n\ The\ edge\ of\ the\ map\ is\ also\ water.\n
numComments=35
